{"version":3,"sources":["Components/Card.js","Components/Grid.js","Components/StartGame.js","Components/Navbar.js","Components/Results.js","Components/Main.js","App.js","index.js"],"names":["Card","props","imgSource","className","onClick","style","backgroundImage","Grid","list","visibleItems","setVisibleItems","hiddenItems","checkItems","map","item","index","includes","length","concat","url","imgDesc","description","id","defaultProps","StartGame","setNewGame","setHiddenItems","setWinner","setScore","sort","Math","random","Navbar","name","score","setName","useState","isChangeName","setIsChangeName","type","value","onBlur","onChange","e","target","Results","results","Main","newGame","setList","winner","timeoutID","setTimeoutID","setResults","clearTimeouts","forEach","clearTimeout","callback","delay","intervalId","useRef","savedCallback","useEffect","current","window","setInterval","clearInterval","useInterval","axios","get","then","res","newList","data","urls","small","a","b","disabled","firstIndex","secondIndex","setTimeout","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba637d2e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Card = props => {\r\n    const { imgSource, className, onClick } = props;\r\n    return (\r\n        <div className={`squaregrid-card ${className}`} onClick={onClick}>\r\n            <div className=\"squaregrid-img\" style={{ backgroundImage: `url(${imgSource})` }} ></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import Card from \"./Card\";\r\n\r\nconst Grid = props => {\r\n    const {\r\n        list,\r\n        visibleItems,\r\n        setVisibleItems,\r\n        hiddenItems,\r\n        checkItems\r\n    } = props;\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"squaregrid\">\r\n                {list.map((item, index) => (\r\n                    <Card\r\n                        key={item.id}\r\n                        className={` card ${visibleItems.includes(index) ? \"squaregrid-card-show\" : \"\"\r\n                            } ${hiddenItems.includes(index)\r\n                                ? \"squaregrid-card-show squaregrid-card-finished\"\r\n                                : \"\"\r\n                            }`}\r\n                        onClick={() => {\r\n                            if (!hiddenItems.includes(index)) {\r\n                                switch (visibleItems.length) {\r\n                                    case 0:\r\n                                        setVisibleItems([index]);\r\n                                        checkItems();\r\n                                        break;\r\n                                    case 1:\r\n                                        if (visibleItems[0] !== index) {\r\n                                            setVisibleItems(visibleItems.concat(index));\r\n                                            checkItems(visibleItems[0], index);\r\n                                        }\r\n                                        break;\r\n                                    default:\r\n                                        setVisibleItems([]);\r\n                                }\r\n                            }\r\n                        }}\r\n                        imgSource={item.url}\r\n                        imgDesc={item.description}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nGrid.defaultProps = {\r\n    list: []\r\n};\r\n\r\nexport default Grid;\r\n","function StartGame(props) {\r\n    const {list, setNewGame, setVisibleItems, setHiddenItems, setWinner, setScore} = props\r\n    return (\r\n        <div className=\"startpage\">\r\n            <button\r\n                onClick={() => {\r\n                list.sort(() => Math.random() - .5)\r\n                setNewGame(true)\r\n                setVisibleItems([])\r\n                setHiddenItems([])\r\n                setWinner(false)\r\n                setScore(0)\r\n                }}\r\n                className=\"btn btn-warning mb-4\"\r\n            >\r\n                Начать\r\n            </button>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default StartGame;","import { useState } from \"react\";\r\n\r\nconst Navbar = (props) => {\r\n    const { name, score, setName} = props;\r\n    const [isChangeName, setIsChangeName] = useState(false)\r\n    return (\r\n      <div className=\"navbar\">\r\n        <div className=\"navbar-title\">Память</div>\r\n        <div className=\"navbar-name\" onClick={() => setIsChangeName(true)}>Имя: <span className={isChangeName ? 'd-none' : ''}>{name}</span>\r\n            <input type=\"text\" className={isChangeName ? '' : 'd-none'} value={name} onBlur={() => setIsChangeName(false)} onChange={e => setName(e.target.value)}/>\r\n        </div>\r\n        <div className=\"navbar-score\">Время: {score}</div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\n\r\nconst Results = props => {\r\n    const { results } = props\r\n\r\n    return (\r\n        results.length > 0 && (\r\n            <div className=\"results\">\r\n                <h5>Таблица рекордов</h5>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <td>Имя</td>\r\n                            <td>Время</td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {results.map((item, index) => (\r\n                            <tr key={index}>\r\n                                <td>{item.name}</td>\r\n                                <td>{item.score}</td>\r\n                            </tr>)\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            )\r\n    );\r\n};\r\n\r\nexport default Results;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\nimport \"./styles.scss\";\r\n\r\nimport Grid from \"./Grid\";\r\nimport StartGame from \"./StartGame\";\r\nimport Navbar from \"./Navbar\";\r\nimport Results from \"./Results\";\r\n\r\nconst useInterval = (callback, delay) => {\r\n    const intervalId = useRef(null);\r\n    const savedCallback = useRef(callback);\r\n\r\n    useEffect(() => {\r\n        savedCallback.current = callback;\r\n    });\r\n\r\n    useEffect(() => {\r\n        const tick = () => savedCallback.current();\r\n\r\n        if (typeof delay === \"number\") {\r\n            intervalId.current = window.setInterval(tick, delay);\r\n\r\n            return () => window.clearInterval(intervalId.current);\r\n        }\r\n    }, [delay]);\r\n\r\n    return intervalId.current;\r\n};\r\n\r\nfunction Main() {\r\n    const CARD_COUNT = 18\r\n\r\n\r\n    const [newGame, setNewGame] = useState(false);\r\n    const [list, setList] = useState([]);\r\n    const [visibleItems, setVisibleItems] = useState([]);\r\n    const [score, setScore] = useState(0);\r\n    const [hiddenItems, setHiddenItems] = useState([]);\r\n    const [winner, setWinner] = useState(true);\r\n    const [timeoutID, setTimeoutID] = useState([]);\r\n    const [name, setName] = useState(\"unnamed\")\r\n    const [results, setResults] = useState([{name: 'for test', score: 123}])\r\n\r\n    const checkItems = (firstIndex, secondIndex) => {\r\n        clearTimeouts([])\r\n\r\n        if (\r\n            firstIndex !== secondIndex &&\r\n            list[firstIndex].url === list[secondIndex].url\r\n        ) {\r\n            setHiddenItems([...hiddenItems, firstIndex, secondIndex]);\r\n            setVisibleItems([]);\r\n        } else if (typeof firstIndex === 'undefined') {\r\n            setTimeoutID(timeoutID.concat(\r\n                setTimeout(() => {\r\n                    setVisibleItems([]);\r\n                }, 5000)\r\n            ));\r\n        } else {\r\n            setTimeoutID(timeoutID.concat(\r\n                setTimeout(() => {\r\n                    setVisibleItems([]);\r\n                }, 500)\r\n            ));\r\n        }\r\n    };\r\n\r\n\r\n    const clearTimeouts = () => {\r\n        timeoutID.forEach((item) => {\r\n            clearTimeout(item)\r\n        })\r\n        setTimeoutID([])\r\n    }\r\n\r\n\r\n    useInterval(\r\n        () => {\r\n            setScore(score => score + 1);\r\n        },\r\n        !winner ? 1000 : null\r\n    )\r\n\r\n\r\n    useEffect(\r\n        () => {\r\n            axios\r\n                .get(\r\n                    \"https://api.unsplash.com/search/photos?query=car&client_id=PURuuKmkzGMyz8735_h1g1A_ZggX-2O-m5_Oev5wJdg&per_page=\" + CARD_COUNT\r\n                )\r\n                .then(res => {\r\n                    const newList = res.data.results.map(item => {\r\n                        return {\r\n                            id: item.id,\r\n                            url: item.urls.small\r\n                        };\r\n                    });\r\n\r\n\r\n                    setList(\r\n                        newList\r\n                            .concat(\r\n                                newList.map(item => {\r\n                                    return {\r\n                                        ...item, id: item.id + Math.random()\r\n                                    };\r\n                                })\r\n                            )\r\n                            .sort(() => Math.random() - .5)\r\n                    );\r\n                });\r\n        },\r\n        [newGame]\r\n    );\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(\r\n        () => {\r\n            if (hiddenItems.length > 0 && hiddenItems.length === list.length && !winner) {\r\n                setWinner(true);\r\n                setResults(results.concat([{name: name, score: score}]).sort((a, b) => a.score - b.score) )\r\n            }\r\n\r\n        },\r\n        [hiddenItems, list, results, name, score, winner]\r\n    );\r\n\r\n    return (\r\n        <div className=\"text-center p-4 d-flex flex-column\">\r\n            <Navbar name={name} score={score} setName={setName} />\r\n            {winner && <StartGame list={list} setNewGame={setNewGame} setVisibleItems={setVisibleItems} setHiddenItems={setHiddenItems} setWinner={setWinner} setScore={setScore} />}\r\n            \r\n            {winner && score !== 0 && (\r\n                <div className=\"mt-3\">\r\n                    Победа! Вы закончили за {score} секунд\r\n                </div>\r\n            )}\r\n\r\n            {winner && <Results results={results} />}\r\n\r\n            {!winner && (\r\n                <div>\r\n                    {list.length === 0 ? (\r\n                        <div>Загрузка изображений...</div>\r\n                    ) : (\r\n                        <div>\r\n                            <Grid disabled={winner}\r\n                                list={list}\r\n                                visibleItems={visibleItems}\r\n                                setVisibleItems={setVisibleItems}\r\n                                hiddenItems={hiddenItems}\r\n                                checkItems={checkItems}\r\n                            />\r\n                        </div>)}\r\n                    {winner}\r\n\r\n                </div>\r\n            )}\r\n\r\n           \r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Main;","import Main from './Components/Main';\n\nfunction App() {\n  return (\n    <Main />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}